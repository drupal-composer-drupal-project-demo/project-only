---
language: php

addons:
  mariadb: '10.0' # Do not know about other versions...
  postgresql: "9.6" # Most recent with trusty is 9.6
  apt:
    packages:
    - elinks # For dysplaying php files on console.
    # - empty-expect

cache:
  directories:
  - $HOME/.composer/cache/files

php:
- nightly
- 7.3
- 7.2 # For Drupal 8.5+
# - 7.1 # Recommanded for Drupal 8.4
- 7.0 # Debian 9
# - 5.6 # Minimum for Drush 9, Debian 8
# - 5.5 # Minimum for Drupal 8

services:
- mysql
- postgresql

env:
  global:
  - LANGCODE="en" # temporary
  - PROFILE="minimal" # temporary
  - DRUPAL_DEV_VERSION="8.7.x-dev"
  # - DRUPAL_DEV_VERSION="8.6.x-dev"
  # - DRUPAL_DEV_VERSION="^8.5@alpha"
  - DRUPAL_PROJECT_DIR="drupal-project"
  - PATH=$TRAVIS_BUILD_DIR:~/.composer/vendor/bin:$(pwd)/$DRUPAL_PROJECT_DIR/vendor/bin:$PATH # $(pwd) for bash source commands and files.
  matrix:
  - DB_TYPE="mysql"
  - DB_TYPE="sqlite"
  - DB_TYPE="pgsql"

matrix:
  fast_finish: true
  include:
  - php: 7.2
    env: DB_TYPE="mysql"  DRUPAL_VERSION=$DRUPAL_DEV_VERSION
  - php: 7.2
    env: DB_TYPE="sqlite" DRUPAL_VERSION=$DRUPAL_DEV_VERSION
  - php: 7.2
    env: DB_TYPE="pgsql"  DRUPAL_VERSION=$DRUPAL_DEV_VERSION
  - php: 5.6
    env: DB_TYPE="mysql"  DRUPAL_VERSION=$DRUPAL_DEV_VERSION
    addons: # default mysql
      apt:
        packages:
        - elinks
  - php: 5.6
    env: DB_TYPE="sqlite" DRUPAL_VERSION=$DRUPAL_DEV_VERSION
  - php: 5.6
    env: DB_TYPE="pgsql"  DRUPAL_VERSION=$DRUPAL_DEV_VERSION
    addons: # default postgresql
      apt:
        packages:
        - elinks
  allow_failures:
  - php: 7.3
  - php: nightly
  - env: DB_TYPE="mysql"  DRUPAL_VERSION=$DRUPAL_DEV_VERSION
  - env: DB_TYPE="sqlite" DRUPAL_VERSION=$DRUPAL_DEV_VERSION
  - env: DB_TYPE="pgsql"  DRUPAL_VERSION=$DRUPAL_DEV_VERSION

before_install:
- pwd
- echo $PATH
- echo $XDG_RUNTIME_DIR
- df
# - mysql -e "CREATE DATABASE IF NOT EXISTS $USER;"
- psql --command="\l" -U postgres
- if ! psql -lqt | cut -d \| -f 1 | grep -qw $USER; then
    psql --command="create database $USER;" -U postgres;
  fi
  # https://stackoverflow.com/questions/14549270/check-if-database-exists-in-postgresql-using-shell
  # psql --command="create database $USER;" -U postgres; # --encoding=UTF8 --owner=$USER
- psql --command="\l" -U postgres
- if [ -f /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then phpenv config-rm xdebug.ini; fi
- composer global require --dev sensiolabs/security-checker

# - pip install pygments # but now pygmentize is no more used right here.
- go get -u github.com/jingweno/ccat

install:
- bash composer_create_drupal-project.bash
- if [[ -v $DRUPAL_PROJECT_DIR ]]; then cd $DRUPAL_PROJECT_DIR; else cd drupal-project; fi;

before_script:
- if ls -A --color web/sites/default/files > /dev/null; then pushd web/sites/default/files; du -sch $(ls -A); popd; fi; # .ht.sqlite

script:
- composer exec --list
- ls vendor/bin
# - env PATH=$PWD/vendor/bin:$PATH sh ../enable-modules.sh
- sh ../enable-modules.sh
- env PATH=..:$PATH bash ../test_script.bash || true
- security-checker security:check --end-point=http://security.sensiolabs.org/check_lock
- cd ..
- if [[ -v $DRUPAL_PROJECT_DIR ]]; then rm -rf $DRUPAL_PROJECT_DIR; else rm -rf drupal-project; fi;
- bash demo_standard.bash --server-bypass
# - env PATH=$PWD/vendor/bin:$PATH sh ../enable-modules.sh
- sh ../enable-modules.sh

- security-checker security:check --end-point=http://security.sensiolabs.org/check_lock ~/.composer/composer.lock
# - 'curl -H "Accept: text/plain" https://security.sensiolabs.org/check_lock -F lock=@${USER}/.composer/composer.lock'
#^ This checks that the application doesn't use dependencies with known security vulnerabilities

after_script:
- composer show --latest
- composer show --tree
- composer why --tree phpunit/phpunit
- composer why --tree symfony-cmf/routing
- composer why --tree symfony/http-kernel
- $GOPATH/bin/ccat composer.json
# - ls --color web/profiles
# - ls --color web/core/profiles
- drupal ######################################################[ERROR] DrupalConsole must be executed within a Drupal Site. 
- drupal help init # Copy configuration files.
- drupal help chain --file=~/.console/chain/quick-start.yml # Used to eg. download, install and serve.
- drupal help quick:start # Maybe shortcut for chain --file=~/.console/chain/quick-start.yml
- drupal help site:new # Download.
- drupal help check
- drupal help site:install # Maybe installation: basic configuration
- drupal help server
- drush 2> /dev/null # drush/drush 8.1.15 does not fold and has lots of warnings (may be with too recent php version).
- drush help runserver
- drush
# - drush help pm:enable
# - drush help theme:enable

# - drush pm:list

# - sh enable-modules.sh

# - drush pm:list

# - drush pm-projectinfo # The pm-projectinfo command was deprecated. Please see `drush pm:list` and `composer show`
